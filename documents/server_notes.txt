Server created in nodeJS 
Using express 

Url to make request:
    http://localhost:8080/

To run:
    In command line, in it's folder type
    node server.js
    (not sure if it needs to do first "npm init" and 
    "npm install express mysql2 bcrypt" 
    because of the .gitignore that avoid uploading all of the node modules)

TOKEN:
    the token will be created when login, 
    the purpose of the token is to validate the user every time there is 
    a request to the server without having to login again.

    the token will consist of 20 digits, the first 10 digits will be a randomly 
    generated number, the last 10 fill be the current date and time plus 2 hours
    Example: 19274937592020112512
    (random:1927493759 year:2020, month:11, day: 25, hour: 10 + 2 = 12)

    the extra 2 hours will be the buffer that the user has to stay logged, if there 
    is no activity in the 2 hours, the token will become invalid and will have to 
    login again.
    every time there is a request with a token, the server will verify that the token 
    is valid and if the token have 1 hour or less time left the server will 
    automatically add one hour to the token. 

Requests:

(available)

login POST
    to call: url + /api/login (http://localhost:8080/api/login)
    (in the body of the request should be the token
    as a json file. Example:
        { "username": "mau",
	  "password": "mau" } 
    ) IMPORTANT: body has to be -> x-www-form-urlencoded
	this request handles superadmins, admins, and participants
	responds:
		if success:
			{ "status": "success",
	  		  "token": "102477667522020110412" } 
		if failure:
			{ status: "Wrong user or pass" }
			or if there is any error, it will sent an http status of 500 (Internal Server Error)

create user POST
    to call: url + /api/createuser (http://localhost:8080/api/createuser)
    (in the body of the request should be the token
    as a json file. Example:
        { "username": "mau",
	  "password": "mau",
 	  "first_name": "mau",
	  "last_name": "mau",
	  "email": "mau@g.com",
	  "phoneNumber": 7777777777,} 
    ) IMPORTANT: body has to be -> x-www-form-urlencoded
	responds:
		if success:
			{ "status": "success",
	  		  "token": "102477667522020110412" } 
		if failure:
			{ status: "invalid username" }
			or if there is any error, it will sent an http status of 500 (Internal Server Error)

create event POST
    to call: url + /api/createevent (http://localhost:8080/api/createevent)
	this function automatically makes you an admin
    (in the body of the request should be the token
    as a json file. Example:
        { 
        "name": "concert",
        "category": "concert",
        "start_date": "2020-12-05",
	"end_date": "2020-12-05",
        "description": "some text",
	"address": "111 some address orlando fl 20209"
	} 
    )
	responds:
		if success:
			{ status: "success" } 
		if failure:
			{ status: `wrong token` }
			{ 
				"status": "wrong date",
    				"occupied_start": "2020-12-07",
    				"occupied_end": "2020-12-08"
			}
			or if there is any error, it will sent an http status of 500 (Internal Server Error)
